name: Release (NuGet)

on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  DOTNET_NOLOGO: true

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Extract version from tag
        id: ver
        shell: bash
        run: echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      # Sadece CLI projesini restore/build et (library projeyi transitif alacak)
      - name: Restore (CLI)
        run: dotnet restore ./SwarmBender.Cli/SwarmBender.Cli.csproj

      - name: Build (CLI)
        run: dotnet build ./SwarmBender.Cli/SwarmBender.Cli.csproj -c Release --no-restore

      - name: Pack (CLI as tool)
        run: dotnet pack ./SwarmBender.Cli/SwarmBender.Cli.csproj -c Release --no-build -o ./nupkgs /p:Version=${{ steps.ver.outputs.version }}

      - name: Ensure NuGet API Key is present
        shell: bash
        run: |
          if [ -z "${{ secrets.NUGET_API_KEY }}" ]; then
            echo "::error::Missing NUGET_API_KEY secret. Add at Org/Repo secrets and grant access."
            exit 1
          fi

      - name: Push to NuGet
        run: dotnet nuget push "./nupkgs/*.nupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source "https://api.nuget.org/v3/index.json" --skip-duplicate

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: SwarmBender ${{ github.ref_name }}
          files: nupkgs/*.nupkg