name: Release (NuGet)

on:
  push:
    tags: ['v*']              # v1.2.3 gibi
  workflow_dispatch:
    inputs:
      version:
        description: 'SemVer version (e.g. 1.2.3 or 1.2.3-beta.1)'
        required: true
        default: '1.0.0'

permissions:
  contents: write
  packages: write

env:
  DOTNET_NOLOGO: true

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # VERSION'ı tek noktadan belirle
      - name: Resolve version (input or tag)
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VER="${{ inputs.version }}"
          else
            VER="${GITHUB_REF_NAME#v}"  # v1.2.3 -> 1.2.3
          fi
          # basit semver doğrulaması
          if ! [[ "$VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z\.-]+)?$ ]]; then
            echo "::error::Version '$VER' is not valid SemVer."
            exit 1
          fi
          echo "VERSION=$VER" >> "$GITHUB_ENV"
          echo "Resolved VERSION=$VER"

      - name: Restore (CLI)
        run: dotnet restore ./SwarmBender.Cli/SwarmBender.Cli.csproj

      - name: Build (CLI)
        run: dotnet build ./SwarmBender.Cli/SwarmBender.Cli.csproj -c Release --no-restore

      - name: Pack (CLI as tool)
        run: dotnet pack ./SwarmBender.Cli/SwarmBender.Cli.csproj -c Release --no-build -o ./nupkgs /p:Version=${{ env.VERSION }}

      - name: Ensure NuGet API Key is present
        shell: bash
        run: |
          if [ -z "${{ secrets.NUGET_API_KEY }}" ]; then
            echo "::error::Missing NUGET_API_KEY secret. Add it at Org/Repo secrets."
            exit 1
          fi

      - name: Push to NuGet
        run: dotnet nuget push "./nupkgs/*.nupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source "https://api.nuget.org/v3/index.json" --skip-duplicate

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: SwarmBender ${{ github.ref_name }}
          files: nupkgs/*.nupkg