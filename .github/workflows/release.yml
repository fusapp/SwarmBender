# .github/workflows/release.yml (özet)

env:
  DOTNET_NOLOGO: true
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}  # Org secret burada da çalışır

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Extract version from tag
        id: ver
        run: echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Pack CLI tool
        run: dotnet pack ./SwarmBender.Cli/SwarmBender.Cli.csproj -c Release -o ./nupkgs /p:Version=${{ steps.ver.outputs.version }}

      # Guard: Org/repo secret gerçekten geliyor mu?
      - name: Guard: NuGet API key exists
        run: |
          if [ -z "${NUGET_API_KEY}" ]; then
            echo "::error::Missing NUGET_API_KEY (org or repo secret)."
            echo "Add it under Organization Secrets and grant access to this repo."
            exit 1
          fi

      - name: Push to NuGet
        if: ${{ env.NUGET_API_KEY != '' }}
        run: dotnet nuget push "./nupkgs/*.nupkg" --api-key "$NUGET_API_KEY" --source "https://api.nuget.org/v3/index.json" --skip-duplicate

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "v${{ steps.ver.outputs.version }}" ./nupkgs/*.nupkg \
            --title "SwarmBender v${{ steps.ver.outputs.version }}" \
            --notes "Automated release via CI."